#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'largestPermutation' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER k
#  2. INTEGER_ARRAY arr
#
def largestPermutation(k, arr):
    n = len(arr)
    
    pos_map = {}
    for i in range(n):
        pos_map[arr[i]] = i

    for i in range(n):
        if k == 0:
            break

        ideal_val = n - i

        if arr[i] == ideal_val:
            continue

        current_idx_of_ideal = pos_map[ideal_val]

        val_at_current_pos = arr[i]

        arr[i] = ideal_val
        arr[current_idx_of_ideal] = val_at_current_pos

        pos_map[ideal_val] = i
        pos_map[val_at_current_pos] = current_idx_of_ideal

        k -= 1
            
    return arr

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    k = int(first_multiple_input[1])

    arr = list(map(int, input().rstrip().split()))

    result = largestPermutation(k, arr)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
