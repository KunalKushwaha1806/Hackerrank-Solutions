#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'lilysHomework' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY arr as parameter.
#
def lilysHomework(arr):
    def min_swaps(target):
        # target = sorted or reverse-sorted array
        n = len(arr)
        # Map each value to its index in the target array
        pos = {v: i for i, v in enumerate(target)}
        visited = [False] * n
        swaps = 0
        
        for i in range(n):
            # already visited or already in right place
            if visited[i] or pos[arr[i]] == i:
                continue
            
            # find cycle size
            cycle_size = 0
            x = i
            while not visited[x]:
                visited[x] = True
                x = pos[arr[x]]
                cycle_size += 1
            if cycle_size > 0:
                swaps += cycle_size - 1
        return swaps
    
    sorted_arr = sorted(arr)
    return min(min_swaps(sorted_arr), min_swaps(sorted_arr[::-1]))


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = list(map(int, input().rstrip().split()))

    result = lilysHomework(arr)

    fptr.write(str(result) + '\n')

    fptr.close()
